version: '3.2'

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
  logstash:

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    container_name: elasticsearch
    hostname: ${HOSTNAME:?err}
    volumes:
      - 'elasticsearch:/usr/share/elasticsearch/data'
      - './elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro'
    ports:
      - "9200:9200"
      - "127.0.0.1:9201:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx2g -Xms1g"
      CLUSTER_NAME: "drecl01"
      NODE_NAME: "dresrv01"
      ELASTIC_PASSWORD: "${PASSWORD_elastic:?err}"
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
      logger.level: WARN
    networks:
      - elk
    healthcheck:
      test: curl -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
    container_name: kibana
    hostname: ${HOSTNAME:?err}
    environment:
      ELASTICSEARCH_USERNAME: "kibana_system"
      ELASTICSEARCH_PASSWORD: "${PASSWORD_kibana_system:?err}"
      logger.level: WARN
    volumes:
      - './kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro'
    ports:
      - "127.0.0.1:9205:5601/tcp"
    networks:
      - elk
    depends_on:
      - elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:${ELK_VERSION}
    container_name: logstash
    hostname: ${HOSTNAME:?err}
    volumes:
      - './logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro'
      - './certs/ca.crt:/etc/ca.crt:ro'
      - './certs/logstash_beats.crt:/etc/beats.crt:ro'
      - './certs/logstash_beats.key:/etc/beats.key:ro'
      - './logstash/pipeline:/usr/share/logstash/pipeline:ro'
      - './logstash/patterns:/usr/share/logstash/patterns:ro'
      - "/var/log:/host/var/log:ro"
      - "logstash:/usr/share/logstash/data"
      - "../mrbot/src/mrbot.log:/var/log/mrbot.log:ro"
    ports:
      - "5044:5044/tcp"
      - "127.0.0.1:9203:5000/tcp"
      - "127.0.0.1:9204:9600/tcp"
    environment:
      ELASTICSEARCH_USERNAME: "elastic"
      ELASTICSEARCH_PASSWORD: "${PASSWORD_elastic:?err}"
      LS_JAVA_OPTS: "-Xmx1g -Xms256m"
      logger.level: WARN
    networks:
      - elk
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:$ELK_VERSION
    container_name: filebeat
    user: root
    hostname: ${HOSTNAME:?err}
    command:
      - "filebeat"
      - "-e"
      - "-strict.perms=false"
    environment:
      ELASTICSEARCH_HOSTS: "elasticsearch:9200"
      ELASTICSEARCH_PROTOCOL: "http"
      ELASTICSEARCH_API_KEY: "${FILEBEAT_API_KEY:?err}"
      logger.level: WARN
    volumes:
      - "./filebeat/config.yml:/usr/share/filebeat/filebeat.yml:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
    networks:
      - elk
    depends_on:
      - elasticsearch
